2013-12-1 19:09
昨天完成了文件系统的雏形，今天计划把tty纳入文件系统。
当我把tty之前的独立循环改成消息机制之后，死机了。
此时的操作系统已经有一定的复杂度，调试很麻烦。试了各种方法，设断点、裁剪代码等等。搞了一上午 + 一下午，问题依然没有解决。
晚上的时候，想到所有进程都采用了IPC机制，很有可能在某个时候所有进程都处在休眠状态（收发信息、延时）。此时的任务调度程序sched就会进入“在就绪进程中选择优先级最高的”死循环！因为此时没有就绪进程，而且程序进入sched，立马就关了中断，导致外中断（时钟）无法打进来，死循环无法解除！最终现象就是死机。
根据这个想法，将一个普通进程里的系统调用delay（这个系统调用会使进程阻塞，进入休眠状态）、sendrecv等会导致进程休眠的代码删掉，然后问题就解决了!证明以上设想是正确的。

附：操作系统中要有一个优先级最低的空闲任务，当其他任务都休眠的时候，它可以继续运行，那就是为了防止以上问题的发生。

	或者修改sched也可以。让它找不到就绪进程，就退出，而不是关着中断傻等。
	
	最终我同时采用了修改sched和增加空闲进程。空闲进程的工作是对一个32无符号整数加一（向ucos学的，这个计数值还能用于统计cpu使用率）